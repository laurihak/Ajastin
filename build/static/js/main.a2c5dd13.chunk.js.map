{"version":3,"sources":["timer.tsx","App.tsx","index.tsx"],"names":["hoursOptions","Array","from","keys","minutesOptions","Timer","useState","hours","minutes","wantedStart","setWantedStart","heaterStart","setHeaterStart","nextDay","setNextDay","dateNow","Date","hoursToTime","getHours","getMinutes","num","Math","floor","toLocaleString","minimumIntegerDigits","className","style","width","paddingBottom","onChange","e","value","target","defaultValue","map","hour","minute","onClick","toString","split","wantedHours","parseInt","wantedMinutes","dateWanted","setDate","getDate","setHours","setMinutes","differenceInHours","getTime","window","alert","whatTimeToSetForHeater","type","checked","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAIMA,EAAeC,MAAMC,KAAKD,MAAM,IAAIE,QACpCC,EAAiBH,MAAMC,KAAK,CAAC,EAAG,GAAI,GAAI,KA+F/BG,EA7FD,WAAO,IAAD,EACoBC,mBAAS,CAAEC,MAAO,IAAKC,QAAS,MADpD,mBACXC,EADW,KACEC,EADF,OAEoBJ,qBAFpB,mBAEXK,EAFW,KAEEC,EAFF,OAGYN,oBAAS,GAHrB,mBAGXO,EAHW,KAGFC,EAHE,KAIZC,EAAU,IAAIC,KAsCdC,GArCmBF,EAAQG,WACNH,EAAQI,aAoCf,SAACC,GACnB,IAAIb,EAAQc,KAAKC,MAAMF,EAAM,IACvBZ,EAAUa,KAAKC,MAAMF,EAAM,IACjC,MAAM,GAAN,OAAUb,EAAMgB,eAAe,QAAS,CACtCC,qBAAsB,IADxB,YAEMhB,EAAQe,eAAe,QAAS,CAAEC,qBAAsB,OAEhE,OACE,gCACE,sBAAKC,UAAU,OAAf,wBACcV,EAAQG,WAAWK,eAAe,QAAS,CAAEC,qBAAsB,IADjF,IAEGT,EAAQI,aAAaI,eAAe,QAAS,CAAEC,qBAAsB,OAExE,qBAAKE,MAAO,CAAEC,MAAO,OAAQC,cAAe,QAA5C,oDACA,sBAAKF,MAAO,CAAEC,MAAO,OAAQC,cAAe,QAA5C,UACE,wBAAQH,UAAU,SAASI,SAAU,SAACC,GAAD,OA9CjBC,EA8CyCD,EAAEE,OAAOD,WA7C1ErB,EAAe,2BAAKD,GAAN,IAAmBF,MAAOwB,KADjB,IAACA,GA8C0DE,aAAc,EAA5F,SACGjC,EAAakC,KAAI,SAACC,GAAD,OAChB,wBAAmBJ,MAAOI,EAA1B,SACGA,EAAKZ,eAAe,QAAS,CAAEC,qBAAsB,KAD3CW,QAHnB,IASE,wBAAQV,UAAU,SAASI,SAAU,SAACC,GAAD,OAzDfC,EAyDyCD,EAAEE,OAAOD,WAxD5ErB,EAAe,2BAAKD,GAAN,IAAmBD,QAASuB,KADjB,IAACA,GAyDtB,SACG3B,EAAe8B,KAAI,SAACE,GAAD,OAClB,wBAAqBL,MAAOK,EAA5B,SACGA,EAAOb,eAAe,QAAS,CAAEC,qBAAsB,KAD7CY,WAMnB,wBAAQX,UAAW,SAAUY,QAvDX,WACpB,GAAK5B,EAAL,CAI+BA,EAAY6B,WAAWC,MAAM,KAA5D,IACMC,EAAsBC,SAAShC,EAAYF,OAC3CmC,EAAwBD,SAAShC,EAAYD,SAE7CmC,EAAmB,IAAI3B,KAEzBH,EAAS8B,EAAWC,QAAQ7B,EAAQ8B,UAAY,GAC/CF,EAAWC,QAAQ7B,EAAQ8B,WAEhCF,EAAWG,SAASN,GACpBG,EAAWI,WAAWL,GAEtB,IAAMM,GAAqBL,EAAWM,UAAYlC,EAAQkC,WAAa,KACvE,GAAID,EAAoB,EAAG,OAAOE,OAAOC,MAAM,uCAC/C,IAAMC,EAAyBnC,EAAsC,IAAzB+B,EAAoB,IAEhEpC,EAAewC,QAnBbF,OAAOC,MAAM,4BAqDb,+CAGA,qBAAK1B,UAAW,OAAhB,SACE,wBAAOA,UAAU,SAAjB,0DAEE,uBAAO4B,KAAK,WAAWC,QAASzC,EAASwB,QAjEzB,WACtBvB,GAAYD,MAiEN,sBAAMY,UAAU,sBAGpB,sBAAKA,UAAU,OAAf,uCAC0B,IACxB,4BACE,mBAAGA,UAAU,oBAAb,SAAkCd,aCjF7B4C,MARf,WACE,OACE,qBAAK9B,UAAU,MAAf,SACE,cAAC,EAAD,OCFN+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a2c5dd13.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./timer.css\";\n\nconst hoursOptions = Array.from(Array(24).keys());\nconst minutesOptions = Array.from([0, 15, 30, 45]);\n\nconst Timer = () => {\n  const [wantedStart, setWantedStart] = useState({ hours: \"7\", minutes: \"0\" });\n  const [heaterStart, setHeaterStart] = useState<string>();\n  const [nextDay, setNextDay] = useState(true);\n  const dateNow = new Date();\n  const hoursNow: number = dateNow.getHours();\n  const minutesNow: number = dateNow.getMinutes();\n\n  const handleMinuteChange = (value: string) => {\n    setWantedStart({ ...wantedStart, minutes: value });\n  };\n  const handleHourChange = (value: string) => {\n    setWantedStart({ ...wantedStart, hours: value });\n  };\n  const handleDayChange = () => {\n    setNextDay(!nextDay);\n  };\n\n  const calculateTime = () => {\n    if (!wantedStart) {\n      window.alert(\"Virhe kokeile uudelleen\");\n      return;\n    }\n    const splittedTime: string[] = wantedStart.toString().split(\":\");\n    const wantedHours: number = parseInt(wantedStart.hours);\n    const wantedMinutes: number = parseInt(wantedStart.minutes);\n\n    const dateWanted: Date = new Date();\n\n    if (nextDay) dateWanted.setDate(dateNow.getDate() + 1);\n    else dateWanted.setDate(dateNow.getDate());\n\n    dateWanted.setHours(wantedHours);\n    dateWanted.setMinutes(wantedMinutes);\n\n    const differenceInHours = (dateWanted.getTime() - dateNow.getTime()) / 36e5;\n    if (differenceInHours < 0) return window.alert(\"Ei onnistu, aikaa liian vähän\");\n    const whatTimeToSetForHeater = hoursToTime((differenceInHours + 2) * 60);\n\n    setHeaterStart(whatTimeToSetForHeater);\n  };\n\n  const hoursToTime = (num: number) => {\n    let hours = Math.floor(num / 60);\n    const minutes = Math.floor(num % 60);\n    return `${hours.toLocaleString(\"en-us\", {\n      minimumIntegerDigits: 2,\n    })}:${minutes.toLocaleString(\"en-us\", { minimumIntegerDigits: 2 })}`;\n  };\n  return (\n    <div>\n      <div className=\"Item\">\n        Kello nyt: {dateNow.getHours().toLocaleString(\"en-us\", { minimumIntegerDigits: 2 })}:\n        {dateNow.getMinutes().toLocaleString(\"en-us\", { minimumIntegerDigits: 2 })}\n      </div>\n      <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>Milloin haluat lämmityksen alkavan?</div>\n      <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n        <select className=\"Select\" onChange={(e) => handleHourChange(e.target.value)} defaultValue={7}>\n          {hoursOptions.map((hour: number) => (\n            <option key={hour} value={hour}>\n              {hour.toLocaleString(\"en-us\", { minimumIntegerDigits: 2 })}\n            </option>\n          ))}\n        </select>\n        :\n        <select className=\"Select\" onChange={(e) => handleMinuteChange(e.target.value)}>\n          {minutesOptions.map((minute: number) => (\n            <option key={minute} value={minute}>\n              {minute.toLocaleString(\"en-us\", { minimumIntegerDigits: 2 })}\n            </option>\n          ))}\n        </select>\n      </div>\n      <button className={\"Button\"} onClick={calculateTime}>\n        Laske mihin ajastin tulee asettaa\n      </button>\n      <div className={\"Item\"}>\n        <label className=\"switch\">\n          Onko haluttu aika seuraavalle päivälle?\n          <input type=\"checkbox\" checked={nextDay} onClick={handleDayChange} />\n          <span className=\"slider round\"></span>\n        </label>\n      </div>\n      <div className=\"Item\">\n        Ajastin täytyy asettaa:{\" \"}\n        <p>\n          <b className=\"text-heater-start\">{heaterStart}</b>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Timer;\n","import React from 'react';\nimport './App.css';\nimport Timer from './timer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Timer/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}